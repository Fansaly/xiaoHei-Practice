# 修复电池状态
# 修改表: DSDT.dsl
# Maintained by: fansaly
# battery-status for Lenovo V2000
# --------------------------------------------------------

# Note, offsets for RECB/WECB based on this EC layout:
#      OperationRegion (ERAM, EmbeddedControl, Zero, 0xFF)
#      Field (ERAM, ByteAcc, Lock, Preserve)
#      {
#            ...
#            Offset (0x12),
#            FUSL,   8,
#            FUSH,   8,
#            FWBT,   64, //0x14
#            Offset (0x5D),
#            EXSI,   8,
#            EXSB,   8,
#            EXND,   8,
#            SMPR,   8,
#            SMST,   8,
#            SMAD,   8,
#            SMCM,   8,
#            SMDA,   256, //0x64
#            BCNT,   8,
#            SMAA,   8,
#            SAD0,   8,
#            SAD1,   8,
#            Offset (0x90),
#            BMN0,   72,
#            BDN0,   56,
#            ...


# 16-bit register edit in EC0
into device label EC0 code_regex B1RC,\s+16 replace_matched begin B1RP,8,B1RN,8 end;
into device label EC0 code_regex B1FV,\s+16 replace_matched begin B1FP,8,B1FN,8 end;
into device label EC0 code_regex B1DV,\s+16 replace_matched begin B1DP,8,B1DN,8 end;
into device label EC0 code_regex B1DC,\s+16 replace_matched begin B1DQ,8,B1DH,8 end;
into device label EC0 code_regex B1FC,\s+16 replace_matched begin B1FQ,8,B1FH,8 end;
into device label EC0 code_regex B1AC,\s+16 replace_matched begin B1AQ,8,B1AH,8 end;

# fix 16-bit methods
into method label _BST code_regex \(B1RC, replaceall_matched begin (B1B2(B1RP,B1RN), end;
into method label _BST code_regex \(B1FV, replaceall_matched begin (B1B2(B1FP,B1FN), end;
into method label _BIF code_regex \(B1DV, replaceall_matched begin (B1B2(B1DP,B1DN), end;
into method label _BIF code_regex \(B1DC, replaceall_matched begin (B1B2(B1DQ,B1DH), end;
into method label _BIF code_regex \(B1FC, replaceall_matched begin (B1B2(B1FQ,B1FH), end;
into method label _BST code_regex \(B1AC, replaceall_matched begin (B1B2(B1AQ,B1AH), end;


# Begin Patching 32-bit and over
into method label MHIF code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;
into method label GBID code_regex \(FWBT, replaceall_matched begin (RECB(0x14,64), end;
into method label MHPF code_regex Store\s+\(FB4,\s+SMDA\) replaceall_matched begin WECB(0x64,256,FB4) end;
into method label MHPF code_regex Store\s+\(SMDA,\s+FB4\) replaceall_matched begin Store(RECB(0x64,256),FB4) end;
into method label CFUN code_regex Store\s+\(Zero,\s+SMDA\) replaceall_matched begin WECB(0x64,256,Zero) end;
into method label CFUN code_regex Store\s+\(SMDA,\s+Local3\) replaceall_matched begin Store(RECB(0x64,256),Local3) end;


# Buffer Fields
into device label EC0 code_regex (B1SN),\s+(16)(,?) replace_matched begin B1SN,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1CR),\s+(16)(,?) replace_matched begin B1CR,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1CC),\s+(16)(,?) replace_matched begin B1CC,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1SM),\s+(16)(,?) replace_matched begin B1SM,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1C1),\s+(16)(,?) replace_matched begin B1C1,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1C2),\s+(16)(,?) replace_matched begin B1C2,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1C3),\s+(16)(,?) replace_matched begin B1C3,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1C4),\s+(16)(,?) replace_matched begin B1C4,%2%3 //%1,%2 end;
into device label EC0 code_regex (B1DA),\s+(16)(,?) replace_matched begin B1DA,%2%3 //%1,%2 end;
into device label EC0 code_regex (LUXV),\s+(16)(,?) replace_matched begin LUXV,%2%3 //%1,%2 end;
into device label EC0 code_regex (BMN0),\s+(72)(,?) replace_matched begin BMN0,%2%3 //%1,%2 end;
into device label EC0 code_regex (BDN0),\s+(56)(,?) replace_matched begin BDN0,%2%3 //%1,%2 end;


# 用到的函数等等
# 修改表: 与上表相同
# ------------------------------------------------------------------------
# Apply B1B2 Patch
into method label B1B2 remove_entry;
into definitionblock code_regex . insert
begin
Method (B1B2, 2, NotSerialized) { Return(Or(Arg0, ShiftLeft(Arg1, 8))) }\n
end;

# utility methods to read/write buffers from/to EC
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;
into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Arg1, 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

